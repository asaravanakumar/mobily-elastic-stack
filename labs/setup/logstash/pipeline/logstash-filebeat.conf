input {
  beats {
    port => 5044
  }
  tcp {
    port => 5000
    codec => json
  }
  udp {
    port => 5000
    codec => json
  }
}

filter {
  if [container][name] {
    mutate {
      add_field => { "[@metadata][target_index]" => "docker-%{+YYYY.MM.dd}" }
    }
  } else {
    mutate {
      add_field => { "[@metadata][target_index]" => "logs-%{+YYYY.MM.dd}" }
    }
  }

  # Extract timestamp if it exists in the log message
  if [timestamp] {
    date {
      match => [ "timestamp", "ISO8601", "UNIX", "UNIX_MS" ]
      target => "@timestamp"
      remove_field => [ "timestamp" ]
    }
  }
  
  # Add severity level if log message contains error, warning, etc.
  if [message] =~ /(?i)error/ {
    mutate {
      add_field => { "severity" => "error" }
    }
  } else if [message] =~ /(?i)warn/ {
    mutate {
      add_field => { "severity" => "warning" }
    }
  } else if [message] =~ /(?i)info/ {
    mutate {
      add_field => { "severity" => "info" }
    }
  } else if [message] =~ /(?i)debug/ {
    mutate {
      add_field => { "severity" => "debug" }
    }
  } else {
    mutate {
      add_field => { "severity" => "unknown" }
    }
  }
  
  # Add service type based on container name
  if [container][name] =~ /(nginx|http)/ {
    mutate {
      add_field => { "service_type" => "web" }
    }
  } else if [container][name] =~ /(mongo|redis|mysql|postgres|db)/ {
    mutate {
      add_field => { "service_type" => "database" }
    }
  } else if [container][name] =~ /(app|api|service)/ {
    mutate {
      add_field => { "service_type" => "application" }
    }
  }
}

output {
  elasticsearch {
    hosts => ["https://es01:9200"]
    index => "%{[@metadata][target_index]}"
    manage_template => false
    user => "elastic" # Consider creating a dedicated 'logstash_writer' user in Elasticsearch
    password => "Changeme"
    ssl_verification_mode => none
  }
  # Uncomment for debugging
  # stdout { codec => rubydebug }
}
